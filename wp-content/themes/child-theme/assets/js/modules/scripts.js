const e={};export async function enqueueScript(n,t,d){return void 0===n||void 0===n.handle?(console.info("Undefined Script",d),!1):void 0!==e[n.handle]?e[n.handle]:!document.querySelector(`#${n.handle}-js, #${n.handle}-js-after`)&&(e[n.handle]=new Promise((async e=>{if(await enqueueDependencies(n.dependencies,t),n.extra){const e=document.createElement("script");e.textContent=n.extra,e.id=`${n.handle}-js-extra`,document.head.appendChild(e)}if(n.before){const e=document.createElement("script");e.textContent=n.before,e.id=`${n.handle}-js-before`,document.head.appendChild(e)}if(n.src){const t=document.createElement("script");t.src=n.src,t.id=`${n.handle}-js`,t.onload=function(){if(n.after){const e=document.createElement("script");e.textContent=n.after,e.id=`${n.handle}-js-after`,document.head.appendChild(e)}e()},document.head.appendChild(t)}else{const t=document.createElement("script");t.textContent=n.after,t.id=`${n.handle}-js-after`,document.head.appendChild(t),e()}})),e[n.handle])}export async function enqueueDependencies(e,n){for(const t in e){const d=e[t];await enqueueScript(n[d],n)}}